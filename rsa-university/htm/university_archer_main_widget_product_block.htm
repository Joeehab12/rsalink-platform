<!DOCTYPE html>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <script src="//code.jquery.com/jquery-1.11.3.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
    <script type="text/javascript">
        var app = angular.module('ngchangeApp', []);
        var $j = jQuery.noConflict();
        var jive_widget_container_large = window.parent.$j(".jive-widget-container-large");
        var noDataFound = '<tr id="noDataFound" style="height: 25px; background-color: #eeeff0;"><td colspan="3" style="width: 18%; height: 89px; font-size: 28px; vertical-align: middle; text-align: center;">NO DATA FOUND</td></tr>';
        app.controller('ngApp', function($scope) {
            //Declare scope variable for Delivery Type drop-down option 
            //Filter DeliveryType
            $scope.deliveryType = [{"value":"ILTc","text":"Live Instructor Led Training - Classroom"},{"value":"ILTv","text":"Live Instructor Led Training - Virtual"},{"value":"ODC","text":"On-Demand - Self-Paced Classroom"},{"value":"ODLe","text":"On-Demand Learning"},{"value":"ODLab","text":"On-Demand Lab"}];
            //Declare scope variable for Role drop-down option
            $scope.roles = [{"value":"ADM","text":"Administrator"},{"value":"AN","text":"Analyst"},{"value":"BU","text":"Business User"},{"value":"CD","text":"Content Developer"},{"value":"EU","text":"End User"},{"value":"CEU","text":"Custom End User"},{"value":"HD","text":"Help Desk Technician"},{"value":"SE","text":"System Engineer"}];
            //Declare scope variable for Level drop-down option
            $scope.levels = [{"value":"CA","text":"Certified Associate"},{"value":"CAD","text":"Certified Administrator"},{"value":"CAN","text":"Certified Analyst"},{"value":"CP","text":"Certified Professional"}];
            $scope.tempDeliveryType = [];
            $scope.filterDeliveryType = []; 
            $scope.tempRole = [];
            $scope.filterRoles = []; 
            $scope.tempLevels = [];
            $scope.filterLevels = []; 
            
            $scope.getProductRowData = []; 
            $scope.getCourseRowData = [];
            $scope.courseInput = "";
            $scope.selectedDeliveryType = null;
            $scope.selectedRole = null;
            $scope.selectedLevel = null;
            
            $scope.init = function () {                
                $scope.getProductRowData = jive_widget_container_large.find(".masterDocument tbody tr td:nth-child(1)").filter(function() {return $(this).text().toLowerCase().split(/[\s,]+/).includes("customers") == true}).parent('tr').filter(function() {return $(this).find("td:nth-child(2)").text().toLowerCase() == "arch";});

                angular.forEach($scope.getProductRowData.find("td:nth-child(5)"), function (value, key) { 
                    $scope.tempDeliveryType.push($j(value).text()); 
                });
                $.each($scope.tempDeliveryType.toString().split(','), function(i, el){
                    if($.inArray(el, $scope.filterDeliveryType) === -1) $scope.filterDeliveryType.push(el);
                });
                $scope.deliveryType = $scope.deliveryType.filter(function(val) {return $scope.filterDeliveryType.find(function(e){return e == val.value;});});
                
                //Filter Role
                angular.forEach($scope.getProductRowData.find("td:nth-child(6)"), function (value, key) { 
                    $scope.tempRole.push($j(value).text()); 
                });
                $.each($scope.tempRole.toString().split(','), function(i, el){
                    if($.inArray(el, $scope.filterRoles) === -1) $scope.filterRoles.push(el);
                });
                $scope.roles = $scope.roles.filter(function(val) {return $scope.filterRoles.find(function(e){return e == val.value;});});
                
                //Filter Levels
                angular.forEach($scope.getProductRowData.find("td:nth-child(8)"), function (value, key) { 
                    $scope.tempLevels.push($j(value).text()); 
                });
                $.each($scope.tempLevels.toString().split(','), function(i, el){
                    if($.inArray(el, $scope.filterLevels) === -1) $scope.filterLevels.push(el);
                });                    
                $scope.levels = $scope.levels.filter(function(val) {return $scope.filterLevels.find(function(e){return e == val.value;});});
                
                jive_widget_container_large.find(".masterDocument tbody tr").remove();
                jive_widget_container_large.find(".masterDocument tbody").html($scope.getProductRowData);
                $scope.getCourseRowData = $scope.getProductRowData;
                
                //Hiding unwanted coulmn of masterDocument
                jive_widget_container_large.find(".masterDocument thead tr th:nth-child(1)").hide();
                jive_widget_container_large.find(".masterDocument thead tr th:nth-child(2)").hide();
                jive_widget_container_large.find(".masterDocument thead tr th:nth-child(5)").hide();
                jive_widget_container_large.find(".masterDocument thead tr th:nth-child(6)").hide();
                jive_widget_container_large.find(".masterDocument thead tr th:nth-child(8)").hide();
                jive_widget_container_large.find(".masterDocument tbody tr td:nth-child(1)").hide();
                jive_widget_container_large.find(".masterDocument tbody tr td:nth-child(2)").hide();
                jive_widget_container_large.find(".masterDocument tbody tr td:nth-child(5)").hide();
                jive_widget_container_large.find(".masterDocument tbody tr td:nth-child(6)").hide();
                jive_widget_container_large.find(".masterDocument tbody tr td:nth-child(8)").hide();

                
                setTimeout(resizeMe,100);
                              
            };
            $scope.init();
            //Row Filter By DeliveryType
            $scope.filterByColumn = function(){
                $scope.courseInput = "";
                $scope.getCourseRowData = [];
                jive_widget_container_large.find(".masterDocument tbody tr").remove();

                if(($scope.selectedDeliveryType == null) && ($scope.selectedRole == null) && ($scope.selectedLevel == null)){
                    $scope.getCourseRowData = $scope.getProductRowData;
                }else if(($scope.selectedDeliveryType != null) && ($scope.selectedRole == null) && ($scope.selectedLevel == null)){
                    $scope.getCourseRowData = $scope.getProductRowData.filter(function() {return ($(this).find("td:nth-child(5)").text().toLowerCase().split(/[\s,]+/).includes($scope.selectedDeliveryType.toLowerCase()) == true)});
                }else if(($scope.selectedDeliveryType != null) && ($scope.selectedRole != null) && ($scope.selectedLevel == null)){
                    $scope.getCourseRowData = $scope.getProductRowData.filter(function() {return ($(this).find("td:nth-child(5)").text().toLowerCase().split(/[\s,]+/).includes($scope.selectedDeliveryType.toLowerCase()) == true) && ($(this).find("td:nth-child(6)").text().toLowerCase().split(/[\s,]+/).includes($scope.selectedRole.toLowerCase()) == true)});                    
                }else if(($scope.selectedDeliveryType != null) && ($scope.selectedRole == null) && ($scope.selectedLevel != null)){
                    if($scope.selectedLevel == "Others"){
                        $scope.getCourseRowData = $scope.getProductRowData.filter(function() {return ($(this).find("td:nth-child(5)").text().toLowerCase().split(/[\s,]+/).includes($scope.selectedDeliveryType.toLowerCase()) == true) && (($j.trim($(this).find("td:nth-child(8)").text()) == ''))}); 
                    }else{
                        $scope.getCourseRowData = $scope.getProductRowData.filter(function() {return ($(this).find("td:nth-child(5)").text().toLowerCase().split(/[\s,]+/).includes($scope.selectedDeliveryType.toLowerCase()) == true) && ($(this).find("td:nth-child(8)").text().toLowerCase().split(/[\s,]+/).includes($scope.selectedLevel.toLowerCase()) == true)});     
                    }                    
                }else if(($scope.selectedDeliveryType == null) && ($scope.selectedRole == null) && ($scope.selectedLevel != null)){
                    if($scope.selectedLevel == "Others"){
                        $scope.getCourseRowData = $scope.getProductRowData.filter(function() {return (($j.trim($(this).find("td:nth-child(8)").text()) == ''))});
                    }else{
                        $scope.getCourseRowData = $scope.getProductRowData.filter(function() {return ($(this).find("td:nth-child(8)").text().toLowerCase().split(/[\s,]+/).includes($scope.selectedLevel.toLowerCase()) == true)}); 
                    } 
                }else if(($scope.selectedDeliveryType == null) && ($scope.selectedRole != null) && ($scope.selectedLevel == null)){
                    $scope.getCourseRowData = $scope.getProductRowData.filter(function() {return ($(this).find("td:nth-child(6)").text().toLowerCase().split(/[\s,]+/).includes($scope.selectedRole.toLowerCase()) == true)}); 
                }else if(($scope.selectedDeliveryType == null) && ($scope.selectedRole != null) && ($scope.selectedLevel != null)){
                    if($scope.selectedLevel == "Others"){
                        $scope.getCourseRowData = $scope.getProductRowData.filter(function() {return ($(this).find("td:nth-child(6)").text().toLowerCase().split(/[\s,]+/).includes($scope.selectedRole.toLowerCase()) == true) && (($j.trim($(this).find("td:nth-child(8)").text()) == ''))});
                    }else{
                        $scope.getCourseRowData = $scope.getProductRowData.filter(function() {return ($(this).find("td:nth-child(6)").text().toLowerCase().split(/[\s,]+/).includes($scope.selectedRole.toLowerCase()) == true) && ($(this).find("td:nth-child(8)").text().toLowerCase().split(/[\s,]+/).includes($scope.selectedLevel.toLowerCase()) == true)});
                    }                   
                     
                }else if(($scope.selectedDeliveryType != null) && ($scope.selectedRole != null) && ($scope.selectedLevel != null)){
                    if($scope.selectedLevel == "Others"){
                        $scope.getCourseRowData = $scope.getProductRowData.filter(function() {return ($(this).find("td:nth-child(5)").text().toLowerCase().split(/[\s,]+/).includes($scope.selectedDeliveryType.toLowerCase()) == true) && ($(this).find("td:nth-child(6)").text().toLowerCase().split(/[\s,]+/).includes($scope.selectedRole.toLowerCase()) == true) && (($j.trim($(this).find("td:nth-child(8)").text()) == ''))}); 
                    }else{
                        $scope.getCourseRowData = $scope.getProductRowData.filter(function() {return ($(this).find("td:nth-child(5)").text().toLowerCase().split(/[\s,]+/).includes($scope.selectedDeliveryType.toLowerCase()) == true) && ($(this).find("td:nth-child(6)").text().toLowerCase().split(/[\s,]+/).includes($scope.selectedRole.toLowerCase()) == true) && ($(this).find("td:nth-child(8)").text().toLowerCase().split(/[\s,]+/).includes($scope.selectedLevel.toLowerCase()) == true)}); 
                    } 

                }

                if($scope.getCourseRowData.length == 0){
                    jive_widget_container_large.find(".masterDocument tbody").html(noDataFound);
                }else{
                    jive_widget_container_large.find(".masterDocument tbody").html($scope.getCourseRowData);
                }
                //console.log($scope.getCourseRowData.find('td:nth-child(3), td:nth-child(4), td:nth-child(7)'));                             
            };

            
            //Filter row by course, DT and Role
            $scope.searchCourse = function (event) {
                /*$scope.getCourseRowData.find("td:nth-child(3), td:nth-child(4), td:nth-child(7)").filter(function() {
                    $(this).parent("tr").toggle($(this).text().toLowerCase().indexOf($(event.target).val().toLowerCase()) > -1);
                });*/
                $scope.getCourseRowData.filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf($(event.target).val().toLowerCase()) > -1);
                });
            };             
        });
    </script>

    <div ng-app="ngchangeApp" ng-controller="ngApp">
      <div class="row">
        <div class="col-sm-3">
            <label for="usr">COURSE</label>
            <input ng-keyup="searchCourse($event)" type="text" class="form-control" id="course" placeholder="Enter Search Criteria Here" ng-model="courseInput">
        </div>
        <div class="col-sm-3">
          <label for="sel1">DELIVERY TYPE</label>
          <select class="form-control" name="deliveryType" ng-options="type.value as type.text for type in deliveryType" ng-change="filterByColumn()" ng-model="selectedDeliveryType">
                <option value="">--Select Delivery Type--</option>
          </select>
        </div>
        <div class="col-sm-3">
          <label for="sel2">ROLE</label>
          <select class="form-control" name="roles" ng-options="role.value as role.text for role in roles" ng-change="filterByColumn()" ng-model="selectedRole">
                <option value="">--Select Role--</option>
          </select>
        </div>
        <div class="col-sm-3">
          <label for="sel3">LEVEL</label>
          <select class="form-control" name="levels" ng-options="level.value as level.text for level in levels" ng-change="filterByColumn()" ng-model="selectedLevel">
                <option value="">--Select Level--</option>
          </select>
        </div>
      </div>
 </div>